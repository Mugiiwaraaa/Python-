""" Data Analysis of Diabetes patients using one label and one feature. Training and Testing data on a Linear Regressor. """
import matplotlib.pyplot as plt
import numpy as np
from sklearn import datasets , linear_model
from sklearn.metrics import mean_squared_error

diabetes = datasets.load_diabetes()
#print(diabetes.DESCR) # DESCRIBES THE dataset, tells us about the attributes in the dataset 
# print(diabetes.data) gives us all the data as numpy arrays 
#['data', 'target', 'frame', 'DESCR', 'feature_names', 'data_filename', 'target_filename', 'data_module']

#we will consider one feature and one label for this example

diabetes_X= diabetes.data[:,np.newaxis,2] # feature at index 2 gets printed as a column of arrays.add()
print(diabetes_X)

#splitting the data(features) into training the model and testing the model

diabetes_X_Train=diabetes_X[:-30] # last 30 datasets for training the model
diabetes_X_Test=diabetes_X[-30:] # first 20 datasers for testing the model

#defining labels for the above features (amount of data sets must be the same as the feature amounts) 
diabetes_Y_Train=diabetes.target[:-30]
diabetes_Y_Test=diabetes.target[-30:]

#Now we define the model from the sklearn lib

model= linear_model.LinearRegression()

model.fit(diabetes_X_Train,diabetes_Y_Train)   #we train the model in order to manifest a predicting line for all the other data value sets, (its like an average of all the datalines)

#By putting a data value , we find out how close it is to the fit line
diabetes_Y_predicted= model.predict(diabetes_X_Test)

#Now we find the mean squarred error(Average of the sum of all the squared errors, (Error=Actual -predicted))
print("Mean squared error is", mean_squared_error(diabetes_Y_Test,diabetes_Y_predicted))

print("Weights",model.coef_) #gives us the weights(no. of features in the model)
print("Intercepts", model.intercept_) #gives us the intercept of the model
#now we plot graphs for the datasets
plt.scatter(diabetes_X_Test,diabetes_Y_Test)
plt.plot(diabetes_X_Test,diabetes_Y_predicted)
plt.show()
